ddf2
rank(dff2,ties:"Hospital.Name")
rank(dff2,"Hospital.Name")
str(ddf2)
str(dff2)
rank(dff2,"State",down:"Hospital.30.Day.Dead..Morality..Rates.from.Heart.Attack",ties:"Hopsital.Name")
rank(dff2,"State",down:"Hospital.30.Day.Dead..Morality..Rates.from.Heart.Attack")
rank(dff2,"State","Hospital.30.Day.Dead..Morality..Rates.from.Heart.Attack")
class(dff2)
(r1 <- rank(x1 <- c(3, 1, 4, 15, 92)))
x2 <- c(3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5)
names(x2) <- letters[1:11]
(r2 <- rank(x2))
dff2
str(dff)
str(dff2)
summary(dff2)
df
dff
dff2<-dff[,c("State",measure)]
dff2
 sel=!is.na(as.numeric(df[[measure]]))
 sel=!is.na(as.numeric(dff2[[measure]]))
dff2<-dff2[sel,
]
dff2
dff3<-dff2[,c("State",as.numeric(measure))]
dff3
dff3<-NA
dff3
dff3<-dff2[,c("State",as.numeric(measure))]
dff3
dff2
str(dff2)
sumary(dff2)
summary(dff2)
dff2<-dff2["State",as.numeric(measure)]
dff3<-dff2["State",as.numeric(measure)]
dff3
summary(dff2)
dff2<-dff[,c("State",measure)]
 sel=!is.na(as.numeric(dff2[[measure]]))
dff2<-dff2[sel,]
dff2
dff3<-c(dff2[,"State"],as.numeric(dff2[,measure])
)
dff3
str(dff3)
dff3<-dff2[,"State",as.numeric(measure)]
dff3
dff3<NA
dff3<-NA
dff3
dff3<-dff2[,("State",as.numeric(measure))]
dff3<-dff2[,c("State",as.numeric(measure))]
dff3<-dff2[,("State",as.numeric(measure))]
dff3
dff2
split(dff2)
split(dff2,"State")
dff
dff2
len(dff2)
length(dff2)
summary(dff2)
nrows(dff2)
nrow(dff2)
apply(dff2, function(pos) pos=pos+1)
apply(dff2, function(cta) cta(pos=pos+1))
apply(dff2, function(cta) cta(pos=pos+1))
apply(dff2, function(cta) cta(pos+1))
apply(dff2, cta<-function(cta) cta(pos+1))
apply(dff2, pos=pos+1)
apply(dff2, (pos=pos+1))
apply(dff2, (pos=pos+1))
for (ww in nrows(dff2) 
{
print (ww)
for (ww in nrows(dff2)  { print(ww)}
for (ww in nrows(dff2))  { print(ww)}
for (ww in nrow(dff2))  { print(ww)}
for (ww in 1:nrow(dff2))  { print(ww)}
st=dff2[1]["State"]
st
st
st=dff2$State[1]
st
st=dff2$State[2]
st
st=dff2$State[1]
source("rannkall.R")
source("rankall.R")
rankall("heart attack",20)
rankall("heart attack",1)
rankall("heart attack",2)
rankall("heart attack",3)
source("rankall.R")
rankall("heart attack",3)
source("rankall.R")
rankall("heart attack",3)
source("rankall.R")
rankall("heart attack",3)
measure
df
dff
dff2<-dff[,c("State",measure)]
dff2
dff2<-NA
dff2
dff2<-dff[,c("State",measure)]
dff2
dff2$pos=0
dff2
sel
sel=NA
sel
sel=!is.na(as.numeric(dff2[[measure]]))
sel
dff2<-dff2[sel,]
dff2
sel2=!is.na(as.numeric(dff2[[measure]]))
sel2
dff2<-dff2[ order(dff2["State"],as.numeric(dff2[[measure]]), dff2["Hospital.Name"]),]
str(dff2)
dff2<-dff[,c("State","Hospital.name",measure)]
dff2<-dff[,c("State","Hospital.Name",measure)]
sel=NA
sel=!is.na(as.numeric(dff2[[measure]]))
dff2<-dff2[sel,]
dff2
dff3<-dff2[ order(dff2["State"],as.numeric(dff2[[measure]]), dff2["Hospital.Name"]),]
dff3
source("rankall.R")
rankall("heart attack",3)
head(rankall("heart attack",3))
tail(rankall("pneumonia",3))
tail(rankall("pneumonia",1))
dff2
tapply(dff2,sum)
tapply(dff2,2,sum)
tapply(dff2,1,sum)
sapply(dff2,1,sum)
sapply(dff2,sum)
sapply(dff2,sum,1)
sapply(dff2,sum,pos)
sapply(dff2,sum,function (x) x=pos)
sapply(dff2,sum,function (x) x=pos)
dff2
str(dff2)
data.frame
dff2[1
]
dff2[,1]
dff2[1,]
tapply(dff2)
tapply(dff2,2)
tapply(dff2,1)
tapply(dff2,1,sum)
tapply(dff2,',sum)
'
tapply(dff2,0,sum)
tapply(dff2,0,min)
apply(dff2,0,min)
apply(dff2,dff2$state,min)
apply(dff2,2,min)
apply(dff2,2,max)
apply(dff2,3,max)
apply(dff2,1,max)
apply(dff2,2,max)
apply(dff2$State,2,max)
apply(dff,2,max)
apply(dff2,2,mean)
apply(dff2,2,max(as.numeric(x))
)
apply(dff2,2,max(as.numeric(x)))
apply(dff2,2,function(x) max(as.numeric(x)) )
apply(dff2,2,function(x) min(as.numeric(x)) )
dff2<-dff$State[,measure,pos]
dff2<-dff$State[,measure]
dff2<-dff$State[measure]
dff2
v<-dff$State
v
names(dff2)
names(dff2)<-v
names(dff2)<-v
dff2
dff2<-dff2[sel,]
dff2<-dff[,c("State","Hospital.Name",measure)]
dff2<-dff2[sel,]
dff2
names(dff2)<-v
dff2
tapply(dff2,measure,min)
tapply(dff2,measure,max)
tapply(dff2,dff2$measure,max)
tapply(dff2,measure,range)
with (tapply(dff2,measure,range))
with (tapply(dff2,measure,range))
split(dff2,dff2$State)
lapply(split(dff2,dff2$State),rank)
ss<-split(dff2,dff2$State)
ss
lapply(s,function(x) rank(x))
lapply(ss,function(x) rank(x))
ss
ss<-dff2$State
ss
tapply(dff2,ss,rank)
tapply(dff2[[measure]],ss,rank)
tapply(dff2[[measure]],ss,rank(ties.method="min"))
tapply(dff2[[measure]],ss,function (x) rank(x,ties.method="min"))
tapply(dff2[[measure]],ss,function (x) rank(x,ties.method="max"))
tapply(dff2[[measure]],ss,function (x) rank(x,ties.method="first"))
lff3<-tapply(dff2[[measure]],ss,function (x) rank(x,ties.method="first"))
lff3
lff3<-tapply(dff2[[measure]],ss,function (x) rank(x,ties.method="first"))
lff3<-as.dataframe(lff3)
lff3<-as.data.frame(lff3)
lff3
lff3<-as.vectpr(lff3)
lff3<-as.vector(lff3)
lff3
class(lff3)
lff3<-tapply(dff2[[measure]],ss,function (x) rank(x,ties.method="first"))
class(lff3)
str(array)
str(lff3)
lff3<-tapply(dff2[[measure]],ss,function (x) rank(x,ties.method="first"))
lff3<-tapply(dff2[[measure]],dff2$State,function (x) rank(x,ties.method="first"))
lff3<-NA
lff3<-tapply(dff2[[measure]],dff2$State,function (x) rank(x,ties.method="first"))
lff3
str(lff3)
dff3<-data.frame(matrix(unlist(ll3),nrow=54,byrow=T),stringsAsFactors=FALSE)
dff3<-data.frame(matrix(unlist(lff3),nrow=54,byrow=T),stringsAsFactors=FALSE)
dff3<-data.frame(matrix(unlist(lff3),nrow=2720,byrow=T),stringsAsFactors=FALSE)
dff3
dff2$State
dff3<-data.frame(matrix(unlist(lff3),nrow=2720,byrow=T),stringsAsFactors=FALSE)
dff2$pos=dff3
dff2
head(dff2)
dff3<-data.frame(matrix(unlist(lff3),nrow=nrow(dff2),byrow=T),stringsAsFactors=FALSE)
dff3
tail(dff3)
head(dff3)
dff2$pos=dff3
tail(dff2)
source("rankall.R")
head(rankall("heart attack",20,10)
)
head(rankall("heart attack",20),10)
tail(rankall("pneumonia",worst),3)
tail(rankall("heart failure"),10)
source("rankall.R")
tail(rankall("heart failure"),10)
source("rankall.R")
source("rankall.R")
head(rankall("heart attack",20),10)
tail(rankall("heart failure"),10)
tail(rankall("heart failure","best"),10)
tail(rankall("heart failure",1),10)
measure
dff2
measure="Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"
dff2<-dffdf[ order(df["State"],as.numeric(df[[measure]]), df["Hospital.Nam        e"]),]
dff2<-dff[ order(dff["State"],as.numeric(dff[[measure]]), dff["Hospital.Nam        e"]),]
dff2<-dff2[,c("State","Hospital.Name",measure)]
dff2$pos=0
dff2
sel=!is.na(as.numeric(dff2[[measure]])
)
dff2<-dff2[sel,]
dff2<-df[ order(dff2["State"],as.numeric(dff2[[measure]]), dff2["Hospital.Name"]),]
dff2<-dff2[ order(dff2["State"],as.numeric(dff2[[measure]]), dff2["Hospital.Name"]),]
lst2<-tapply(dff2[[measure]],dff2$State,function (x) rank(x,ties.method="first"))
lst2
dff2$pos=data.frame(matrix(unlist(lst),nrow=nrow(dff2),byrow=T),stringsAsFactors=FALSE)
dff2$pos=data.frame(matrix(unlist(lst2),nrow=nrow(dff2),byrow=T),stringsAsFactors=FALSE)
dff2
dff2$pos==1
dff2[dff2$pos==1,]
dff2[dff2$state=="TX",]
dff2[dff2$State=="TX",]
measure="Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure"
dff2<-dff2[,c("State","Hospital.Name",measure)]
dff2<-dff[,c("State","Hospital.Name",measure)]
dff2$pos=0
sel2=!is.na(as.numeric(dff2[[measure]]))
dff2<-dff2[sel2,]
dff2<-dff2[ order(dff2["State"],as.numeric(dff2[[measure]]), dff2["Hospital.Name"]),]
lst2<-tapply(dff2[[measure]],dff2$State,function (x) rank(x,ties.method="first"))
dff2$pos=data.frame(matrix(unlist(lst2),nrow=nrow(dff2),byrow=T),stringsAsFactors=FALSE)
head(dff2)
head(dff2$State=="TX")
head(dff2[State=="TX"])
head(dff2["State"=="TX"])
head(dff2["State"=="TX",])
head(dff2["State"=="TX",],10)
dff2
dff2[dff2$State=="TX",]
dff2[dff2$Hospital.Name=="FORT DUNCAN MEDICAL CENTER",]
lst2<-tapply(as.numeric(dff2[[measure]]),dff2$State,function (x) rank(x,ties.method="first"))
dff2$pos=data.frame(matrix(unlist(lst2),nrow=nrow(dff2),byrow=T),stringsAsFactors=FALSE)
dff2[dff2$Hospital.Name=="FORT DUNCAN MEDICAL CENTER",]
source("rankall.R"
)
tail(rankall("heart failure",1),10)
head(rankall("heart attack",20),10)
tail(rankall("heart failure"),10)
tail(rankall("heart failure","best"),10)
head(rankall("heart attack",20),10)
lst3<-tapply(as.numeric(dff2[[measure]]),dff2$State,function (x) max(x)
)
lst3
lst2<-tapply(as.numeric(dff2[[measure]]),dff2$State,function (x) rank(x,ties.method="first"))
lst3<-tapply(as.numeric(dff2$pos),dff2$State,function (x) max(x))
lst3<-tapply(dff2$pos,dff2$State,function (x) max(x))
dff2$pos
class(dff2$pos)
lst3<-tapply(as.numeric(dff2[[measure]]),dff2$State,function (x) max(x))
lst3
lst3<-tapply(as.numeric(dff2[[measure]]),dff2$State,function (x) sum(x==1))
lst3
lst3<-tapply(as.numeric(dff2[[measure]]),dff2$State,function (x) sum(1))
lst3
lst3<-tapply(as.numeric(dff2[[measure]]),dff2$State,function (x) suma(x+1))
lst3<-tapply(as.numeric(dff2[[measure]]),dff2$State,function (x) (x+1))
lst3
lst3<-tapply(as.numeric(dff2[[measure]]),dff2$State,function (x) (y+1))
lst3<-tapply(as.numeric(dff2[[measure]]),dff2$State,function (x) max(x) )
lst3
lst3<-tapply(as.numeric(dff2[["pos"]]),dff2$State,function (x) max(x) )
lst3<-tapply(as.numeric(dff2["pos"]),dff2$State,function (x) max(x) )
lst3<-tapply(as.numeric(dff2[,"pos"]),dff2$State,function (x) max(x) )
dff2[,"pos"]
str(dff2[,"pos"])
str(dff2[[measure]])
str(dff2[["pos"]])
lst3<-tapply(as.numeric(dff2["pos"[,1]]),dff2$State,function (x) max(x) )
lst3<-tapply(as.numeric(dff2["pos"[,1]]),dff2$State,function (x) max(x) )
dff2$pos
str(dff2$pos)
str(dff2)
dff2$pos=as.vector(data.frame(matrix(unlist(lst2),nrow=nrow(dff2),byrow=T),stringsAsFactors=FALSE))
dff2$pos
class(dff2$pos)
dff2$pos=as.vector(matrix(unlist(lst2),nrow=nrow(dff2),byrow=T),stringsAsFactors=FALSE)
dff2$pos=as.vector(matrix(unlist(lst2),nrow=nrow(dff2),byrow=T))
dff2
dff2$pos
dff2$pos=as.vector(matrix(unlist(lst2),nrow=nrow(dff2),byrow=T))
source("rankall.R")
head(rankall("heart attack",20),10)
tail(rankall("heart failure"),10)
tail(rankall("heart failure",1),10)
tail(rankall("heart failure","best"),10)
dff2$pos
class(dff2$pos)
lst3<-tapply(as.numeric(dff2$pos),dff2$State,function (x) max(x) )
lst3
dff2$Max<-as.vector(matrix(unlist(lst3),nrow=nrow(df),byrow=T))
dff2$Max<-as.vector(matrix(unlist(lst3),nrow=nrow(dff2),byrow=T))
as.vector(matrix(unlist(lst3),nrow=nrow(dff2),byrow=T))
as.vector(matrix(unlist(lst3),nrow=nrow(dff2),byrow=T))
lst3
str(lst3)
dff3<-dff2
dff3$worst<-dff3$State==lst3[State]
str(lst3)
lst3
dff3=data.frame(matrix(unlist(lst3),nrow=nrow(dff2),byrow=T),strigsAsFactors=FALSE)
dff3=data.frame(matrix(unlist(lst3),nrow=nrow(dff2),byrow=T),strigsAsFactors=FALSE)
dff3
lst3
dff3=data.frame(matrix(unlist(lst3),nrow=54,byrow=T),strigsAsFactors=FALSE)
dff3
dff3=data.frame(matrix(unlist(lst3),nrow=54,byrow=T))
dff3
dff3=data.frame(matrix(unlist(lst3),nrow=54,byrow=T))
str(lst3)
lst3."AK"
lst3.AK
lst3(AK)
lst3[AK
]
lst3[AK]
lst3["AK"]
lst3["NY"]
lst3$NY
lst3$"NY"
lst3["NY"]
lst3[["NY"]]
dff3
dff3<-dff2
dff3
str(dff3)
dff3$Max<-lst3[[dff3$State]]
dff3$Max<-lst3[[dff3[,State]]]
dff3$Max<-lst3[[dff3[,"State"]]]
dff3$Max<-lst3[dff3[,"State"]]
dff3
dff3
sel2<-dff3$pos==dff3$Max
sel2
lst3[["NY"]]
lst3[["AL"]]
lst3[["AK"]]
lst3[["A0"]]
lst3[["AK"]]
q()
source("rankall.R")
 head(rankall("heart attack", 20), 10)
source("rankall.R")
 head(rankall("heart attack", 20), 10)
q()
rm(sumbit())
rm(submit)
ls
ls()
library(swirl)
swirl()
Sys.Date()
mean(c(2,4,5))
submit()
boring_function('My first function!')
boring_function
submit()
my_mean(c(4,5,10))
submit()
remainder(5)
remainder(11,5)
remainder(divisor=11,num=5)
remainder(4,div=2)
args(remainder)
submit()
evaluate(std,c(1.4,3.6,7.9,8.8))
evaluate(stddev,c(1.4,3.6,7.9,8.8))
evaluate(sd,c(1.4,3.6,7.9,8.8))
evaluate(function(x){x+1},6)
evaluate(function(x){x[1]},c(8,4,0))
evaluate(function(x){x[length(x)]},c(8,4,0))
?paste
paste("Programming", "is","fun!")
submit()
submit()
submit()
submit()
submit()
telegram("diablos")
submit()
submit8)
submit()
sub()
submit()
submit()
submit()
q()
filexml="https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc<-xmlTreeParse(filexml,useInternal=T)
library(XML)
down
doc<-xmlTreeParse(filexml,useInternal=T)
filexml="https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc<-xmlTreeParse(filexml,useInternal=T)
doc<-xmlTreeParse(filexml,useInternal=T,method="curl")
doc<-xmlTreeParse(filexml,useInternal=TRUE)
doc<-xmlTreeParse(filexml)
doc<-xmlTreeParse(filexml,useInternal=TRUE)
download.file(filexml,destfile="./data/rest.xml",method="curl")
doc<-xmlTreeParse(filexml,useInternal=TRUE)
xmlName(rootNode)
footNode<-xmlRoot(doc)
rootNode<-xmlRoot(doc)
doc<-xmlTreeParse(filexml,useInternal=TRUE)
filexml
filem="https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
download.file(filem,destfile="./data/micro.csv",method="curl")
library(data.table)
library(data.table)
DT=fread(filem,sep="auto")
DT=fread(input="./data/micro.csv",sep="auto")
class(DT)
attr(DT)
struc(DT)
struct(DT)
structure(DT)
time(tapply(DT$pwgtp15,DT$SEX,mean))
system.time(tapply(DT$pwgtp15,DT$SEX,mean))
system.time(mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15))
system.time(mean(DT[DT$SEX==1,]$pwgtp15)); system.time(mean(DT[DT$SEX==2,]$pwgtp15))
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
system.time(mean(DT$pwgtp15,by=DT$SEX))
mean(DT$pwgtp15,by=DT$SEX)
system.time(DT[,mean(pwgtp15),by=SEX])
system.time(rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2])
system.time(rowMeans(DT)[DT$SEX==1]); system.time(rowMeans(DT)[DT$SEX==2])
system.time(tapply(DT$pwgtp15,DT$SEX,mean))
system.time(mean(DT[DT$SEX==1,]$pwgtp15)); system.time(mean(DT[DT$SEX==2,]$pwgtp15))
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
system.time(mean(DT$pwgtp15,by=DT$SEX))
tapply(DT$pwgtp15,DT$SEX,mean)
mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)
sapply(split(DT$pwgtp15,DT$SEX),mean)
mean(DT$pwgtp15,by=DT$SEX)
DT[,mean(pwgtp15),by=SEX]
rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2]
DT[,mean(pwgtp15),by=SEX]
system.time(DT[,mean(pwgtp15),by=SEX])
q
quit()
